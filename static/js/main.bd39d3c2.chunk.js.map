{"version":3,"sources":["components/Experience.js","components/Education.js","components/Basic-info.js","components/Form.js","components/Cv.js","App.js","serviceWorker.js","index.js"],"names":["Experience","props","handleExChange","className","style","background","color","marginTop","state","map","item","Container","id","key","Row","Col","alignItems","display","justifyContent","padding","gap","Button","variant","onClick","removeEx","Form","Group","controlId","Label","Control","onChange","name","value","companyName","type","placeholder","positionTitle","mainTasks","jobStartDate","jobEndDate","Education","marginBottom","removeEd","handleEdChange","schoolName","studyType","studyStartDate","studyEndDate","BasicInfo","this","email","adress","phoneNumber","handleChange","xs","md","lg","Text","pattern","React","Component","MyForm","toggleEdit","addEducation","addExperience","education","experience","Cv","textAlign","paddingLeft","maxWidth","divContents","document","querySelector","innerHTML","printWindow","window","open","write","close","print","App","edit","bind","e","setState","target","preventDefault","newEx","ed","Number","closest","ed1","newEd","thisStateEx","newExField","length","concat","thisStateEd","newEdField","filter","ex","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd39d3c2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Container, Button, Col, Row } from \"react-bootstrap\";\n\nfunction Experience(props) {\n  const { handleExChange } = props;\n  return (\n    <div\n      className=\"component\"\n      style={{ background: \"#82add4\", color: \"white\", marginTop: \"20px\" }}\n    >\n      {props.state.map((item) => {\n        return (\n          <Container className=\"ex-container\" id={item.id} key={item.id}>\n            <Row>\n              <Col\n                style={{\n                  alignItems: \"center\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  padding: \"20px\",\n                  gap: \"20px\",\n                }}\n              >\n                <h2>Work experience {item.id}</h2>\n                <Button variant=\"success\" onClick={props.removeEx}>\n                  x\n                </Button>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <Form.Group controlId=\"formBasicCompanyName\">\n                  <Form.Label>Company Name</Form.Label>\n                  <Form.Control\n                    onChange={handleExChange}\n                    name=\"companyName\"\n                    value={item.companyName}\n                    type=\"text\"\n                    placeholder=\"Enter company name\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formBasicPositionTitle\">\n                  <Form.Label>Position Title</Form.Label>\n                  <Form.Control\n                    onChange={handleExChange}\n                    name=\"positionTitle\"\n                    value={item.positionTitle}\n                    type=\"text\"\n                    placeholder=\"Enter position title\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formBasicJobTasks\">\n                  <Form.Label>Main Tasks</Form.Label>\n                  <Form.Control\n                    onChange={handleExChange}\n                    name=\"mainTasks\"\n                    value={item.mainTasks}\n                    type=\"text\"\n                    placeholder=\"main tasks of your jobs\"\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <Form.Group controlId=\"formBasicJobDate\">\n                  <Form.Label>Start date</Form.Label>\n                  <Form.Control\n                    onChange={handleExChange}\n                    name=\"jobStartDate\"\n                    value={item.jobStartDate}\n                    type=\"date\"\n                    placeholder=\"Start of your job\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId=\"formBasicJobDate\">\n                  <Form.Label>End date</Form.Label>\n                  <Form.Control\n                    onChange={handleExChange}\n                    name=\"jobEndDate\"\n                    value={item.jobEndDate}\n                    type=\"date\"\n                    placeholder=\"End of your job\"\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n          </Container>\n        );\n      })}\n    </div>\n  );\n}\nexport default Experience;\n","import React from \"react\";\nimport { Form, Button, Container, Col, Row } from \"react-bootstrap\";\n\nfunction Education(props) {\n  return (\n    <div\n      className=\"component\"\n      style={{\n        background: \"rgb(148 218 202)\",\n        color: \"white\",\n        padding: \"20px\",\n        marginBottom: \" 10px\",\n      }}\n    >\n      {props.state.map((item) => {\n        return (\n          <Container className=\"ed-container\" id={item.id} key={item.id}>\n            <Row>\n              <Col\n                style={{\n                  alignItems: \"center\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  gap: \"20px\",\n                }}\n              >\n                <h2>Education {item.id}</h2>\n                <Button variant=\"success\" onClick={props.removeEd}>\n                  x\n                </Button>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <Form.Label>School Name</Form.Label>\n                <Form.Control\n                  onChange={props.handleEdChange}\n                  value={item.schoolName}\n                  name=\"schoolName\"\n                  type=\"text\"\n                  placeholder=\"Enter school name\"\n                />\n              </Col>\n              <Col>\n                <Form.Label>Study Type</Form.Label>\n                <Form.Control\n                  onChange={props.handleEdChange}\n                  value={item.studyType}\n                  name=\"studyType\"\n                  type=\"text\"\n                  placeholder=\"Enter study type\"\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Label>Start of study</Form.Label>\n                <Form.Control\n                  onChange={props.handleEdChange}\n                  value={item.studyStartDate}\n                  name=\"studyStartDate\"\n                  type=\"date\"\n                />\n              </Col>\n              <Col>\n                <Form.Label>End of study</Form.Label>\n                <Form.Control\n                  onChange={props.handleEdChange}\n                  name=\"studyEndDate\"\n                  value={item.studyEndDate}\n                  type=\"date\"\n                />\n              </Col>\n            </Row>\n          </Container>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Education;\n","import React from \"react\";\nimport { Form, Container, Col, Row } from \"react-bootstrap\";\n\nclass BasicInfo extends React.Component {\n  render() {\n    const { name, email, adress, phoneNumber } = this.props.state;\n    const { handleChange } = this.props;\n    return (\n      <Container\n        className=\"component\"\n        style={{ background: \"#c2c2d0\", color: \"white\", padding: \"20px\" }}\n      >\n        <h2>Basic Information</h2>\n        <Row xs={2} md={4} lg={12}>\n          <Col>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"Enter full name\"\n            />\n          </Col>\n          <Col>\n            <Form.Label>Adress</Form.Label>\n            <Form.Control\n              name=\"adress\"\n              value={adress}\n              onChange={handleChange}\n              type=\"text\"\n              placeholder=\"Enter adress\"\n            />\n          </Col>\n          <Col>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              name=\"email\"\n              onChange={handleChange}\n              value={email}\n              type=\"email\"\n              placeholder=\"Enter email\"\n            />\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Col>\n          <Col>\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control\n              name=\"phoneNumber\"\n              onChange={handleChange}\n              value={phoneNumber}\n              type=\"text\"\n              pattern=\"^[0-9]+$\"\n              placeholder=\"Enter phone number\"\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default BasicInfo;\n","import React from \"react\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\nimport BasicInfo from \"./Basic-info\";\nimport { Container, Button, Row, Col } from \"react-bootstrap\";\n\nclass MyForm extends React.Component {\n  render() {\n    const {\n      toggleEdit,\n      handleChange,\n      addEducation,\n      handleEdChange,\n      handleExChange,\n      removeEx,\n      addExperience,\n      removeEd,\n      state,\n    } = this.props;\n    return (\n      <Container>\n        <BasicInfo handleChange={handleChange} state={state} />\n        <Education\n          removeEd={removeEd}\n          handleEdChange={handleEdChange}\n          state={state.education}\n        />\n        <Row>\n          <Col lg={2}>\n            <Button onClick={addEducation}>Add Education</Button>\n          </Col>\n        </Row>\n        <Experience\n          removeEx={removeEx}\n          handleExChange={handleExChange}\n          state={state.experience}\n        />\n        <Row>\n          <Col lg={2}>\n            <Button onClick={addExperience}>Add Experience</Button>\n          </Col>\n        </Row>\n        <Button\n          style={{ marginTop: \"20px\" }}\n          onClick={toggleEdit}\n          type=\"primary\"\n        >\n          Close\n        </Button>\n      </Container>\n    );\n  }\n}\n\nexport default MyForm;\n","import React from \"react\";\nimport { Container, Row, Button, Col } from \"react-bootstrap\";\n\nfunction Cv(props) {\n  const { name, email, adress, phoneNumber } = props.state;\n\n  return (\n    <Container>\n      <div className=\"cv\">\n        <Row>\n          <h3>{name}</h3>\n        </Row>\n        <Row>\n          <p>{adress}</p>\n        </Row>\n        <Row>\n          <p>{email}</p>\n        </Row>\n        <Row>\n          <p>{phoneNumber}</p>\n        </Row>\n        <Row>\n          <h4>Education</h4>\n        </Row>\n        {props.state.education.map((item) => {\n          return (\n            <div key={item.id}>\n              <Row style={{ marginBottom: \"20px\" }}>\n                <li>\n                  {item.studyType} ({item.schoolName}), {item.studyStartDate} -{\" \"}\n                  {item.studyEndDate}\n                </li>\n              </Row>\n            </div>\n          );\n        })}\n        <Row>\n          <h4 style={{ textAlign: \"left\", paddingLeft: 0 }}>Work Experience</h4>\n        </Row>\n        {props.state.experience.map((item) => {\n          return (\n            <div key={item.id}>\n              <Row>\n                <li>\n                  {item.companyName} - {item.jobStartDate} - {item.jobEndDate}\n                </li>\n              </Row>\n              <Row>\n                <p>{item.positionTitle}</p>\n              </Row>\n              <Row>\n                <p style={{ maxWidth: \"400px\", textAlign: \"left\" }}>\n                  {item.mainTasks}\n                </p>\n              </Row>\n            </div>\n          );\n        })}\n      </div>\n      <Row>\n        <Col>\n          <Button\n            className=\"edit-button\"\n            variant=\"success\"\n            onClick={props.toggleEdit}\n          >\n            Edit\n          </Button>\n        </Col>\n        <Col>\n          <Button\n            className=\"print-button\"\n            variant=\"primary\"\n            onClick={() => {\n              var divContents = document.querySelector(\".cv\").innerHTML;\n              var printWindow = window.open(\"\", \"\", \"height=1200,width=1400\");\n              printWindow.document.write(\n                \"<html><head><title>Print DIV Content</title>\"\n              );\n              printWindow.document.write(\n                \"</head><body style='padding: 60px;font-size: 18px; font-family: system-ui;'}>\"\n              );\n              printWindow.document.write(divContents);\n              printWindow.document.write(\"</body></html>\");\n              printWindow.document.close();\n              printWindow.print();\n            }}\n          >\n            Print\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Cv;\n","import React from \"react\";\nimport MyForm from \"./components/Form\";\nimport Cv from \"./components/Cv\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: false,\n      name: \"Flavio Gonzales\",\n      email: \"flaviogonz@gmail.com\",\n      phoneNumber: \"1393923932\",\n      adress: \"3204 Windover Way Houston, TX 77204\",\n      education: [\n        {\n          id: 1,\n          schoolName: \"University of Houston\",\n          studyType: \"Ph.d in spanish\",\n          studyStartDate: \"2017-06-01\",\n          studyEndDate: \"2013-04-11\",\n        },\n        {\n          id: 2,\n          schoolName: \"University of TX\",\n          studyType: \"Mb.d in Linguistics\",\n          studyStartDate: \"2017-06-01\",\n          studyEndDate: \"2013-04-11\",\n        },\n      ],\n      experience: [\n        {\n          id: 1,\n          companyName: \"ABC Corporation\",\n          positionTitle: \"Linguist\",\n          mainTasks:\n            \"Edited and translated written materials, business correspondence, and translation between languages.\",\n          jobStartDate: \"2018-04-13\",\n          jobEndDate: \"2020-02-26\",\n        },\n        {\n          id: 2,\n          companyName: \"CDE Corporation\",\n          positionTitle: \"Linguist\",\n          mainTasks:\n            \"Edited and translated written materials, business correspondence, and translation between languages.\",\n          jobStartDate: \"2015-04-13\",\n          jobEndDate: \"2017-02-26\",\n        },\n      ],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.toggleEdit = this.toggleEdit.bind(this);\n    this.addEducation = this.addEducation.bind(this);\n    this.addExperience = this.addExperience.bind(this);\n    this.handleEdChange = this.handleEdChange.bind(this);\n    this.removeEd = this.removeEd.bind(this);\n    this.removeEx = this.removeEx.bind(this);\n    this.handleExChange = this.handleExChange.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n  toggleEdit(e) {\n    e.preventDefault();\n    this.setState({\n      edit: !this.state.edit,\n    });\n  }\n  handleExChange(e) {\n    const newEx = this.state.experience.map((ed) => {\n      if (ed.id === Number(e.target.closest(\".ex-container\").id)) {\n        const ed1 = ed;\n        ed1[e.target.name] = [e.target.value];\n        return ed1;\n      } else {\n        return ed;\n      }\n    });\n    this.setState({\n      experience: newEx,\n    });\n  }\n  handleEdChange(e) {\n    const newEd = this.state.education.map((ed) => {\n      if (ed.id === Number(e.target.closest(\".ed-container\").id)) {\n        const ed1 = ed;\n        ed1[e.target.name] = [e.target.value];\n        return ed1;\n      } else {\n        return ed;\n      }\n    });\n    this.setState({\n      education: newEd,\n    });\n  }\n  addExperience() {\n    debugger;\n    const thisStateEx = this.state.experience;\n    const newId =\n      thisStateEx.length === 0 ? 0 : thisStateEx[thisStateEx.length - 1].id + 1;\n    const newExField = {\n      id: newId,\n      companyName: \"\",\n      positionTitle: \"\",\n      mainTasks: \"\",\n      jobStartDate: \"\",\n      jobEndDate: \"\",\n    };\n    this.setState({\n      experience: this.state.experience.concat(newExField),\n    });\n  }\n  addEducation() {\n    debugger;\n    const thisStateEd = this.state.education;\n    const newId =\n      thisStateEd.length === 0 ? 0 : thisStateEd[thisStateEd.length - 1].id + 1;\n    const newEdField = {\n      id: newId,\n      schoolName: \"\",\n      studyType: \"\",\n      studyStartDate: \"\",\n      studyEndDate: \"\",\n    };\n    this.setState({\n      education: this.state.education.concat(newEdField),\n    });\n  }\n  removeEx(e) {\n    const newEx = this.state.experience.filter(\n      (ex) => ex.id !== Number(e.target.closest(\".ex-container\").id)\n    );\n    this.setState({\n      experience: newEx,\n    });\n  }\n  removeEd(e) {\n    const newEd = this.state.education.filter(\n      (ed) => ed.id !== Number(e.target.closest(\".ed-container\").id)\n    );\n    this.setState({\n      education: newEd,\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>CV APP</h1>\n        {!this.state.edit ? (\n          <Cv\n            state={this.state}\n            addEducation={this.addEducation}\n            toggleEdit={this.toggleEdit}\n          />\n        ) : (\n          <MyForm\n            addEducation={this.addEducation}\n            removeEd={this.removeEd}\n            removeEx={this.removeEx}\n            state={this.state}\n            addExperience={this.addExperience}\n            handleExChange={this.handleExChange}\n            handleEdChange={this.handleEdChange}\n            handleChange={this.handleChange}\n            toggleEdit={this.toggleEdit}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}